generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  password       String
  firstName      String           @map("first_name") @db.VarChar(255)
  lastName       String           @map("last_name") @db.VarChar(255)
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  address        String           @db.VarChar(255)
  phone          String           @db.VarChar(20)
  profilePicture String           @map("profile_picture")
  forgotPassword ForgotPassword[]
  post           Post[]

  @@map("users")
}

model Post {
  id          String        @id @default(uuid())
  description String        @db.VarChar(500)
  createdAt   DateTime      @default(now()) @map("created_at")
  updatedAt   DateTime      @updatedAt @map("updated_at")
  userId      Int           @map("user_id")
  mileage     String
  year        Int
  country     String
  priceId     String        @unique @map("price_id")
  carId       String        @map("car_id")
  mediaInPost MediaInPost[]
  car         Car           @relation(fields: [carId], references: [id])
  price       Price         @relation(fields: [priceId], references: [id])
  user        User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "posts_user_id_fkey")
  @@index([carId], map: "posts_car_id_fkey")
  @@map("posts")
}

model Car {
  id            String   @id @default(uuid())
  used          Boolean
  bodyType      String   @map("body_type")
  drivetrain    String
  engine        String
  exteriorColor String   @map("exterior_color")
  fuelType      String   @map("fuel_type")
  interiorColor String   @map("interior_color")
  transmission  String
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  model         String
  horsePower    Int      @map("horse_power")
  brand         String
  post          Post[]

  @@map("cars")
}

model Price {
  id        String   @id @default(uuid())
  price     String
  currency  String
  fixed     Boolean
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  post      Post?

  @@map("prices")
}

model MediaInPost {
  mediaId  String @unique @map("media_id")
  priority Int
  id       String @id @default(uuid())
  postId   String @map("post_id")
  media    Media  @relation(fields: [mediaId], references: [id])
  post     Post   @relation(fields: [postId], references: [id])

  @@index([postId], map: "media_in_post_post_id_fkey")
  @@map("media_in_post")
}

model ForgotPassword {
  id     String @id
  userId Int    @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], map: "forgot_password_user_id_fkey")
  @@map("forgot_password")
}

model Media {
  id          String       @id @default(uuid())
  path        String
  createdAt   DateTime     @default(now()) @map("created_at")
  updatedAt   DateTime     @updatedAt @map("updated_at")
  mediaInPost MediaInPost?

  @@map("medias")
}
