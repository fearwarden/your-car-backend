// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  firstName String @db.VarChar(255) @map("first_name")
  lastName String @db.VarChar(255) @map("last_name")
  phone String @db.VarChar(20)
  profilePicture String @map("profile_picture")
  address String @db.VarChar(255)
  post Post[]
  forgotPassword ForgotPassword[]
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("users")
}

// Post model ce imati vezu sa users, cars and reviews
// zato pravimo poseban model post
model Post {
  id String @id @default(uuid())
  description String @db.VarChar(500)
  country String
  year Int
  mileage String
  car Car?
  price Price?
  mediaInPost MediaInPost?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("posts")
}

model Car {
  id String @id @default(uuid())
  model String
  used Boolean
  bodyType String @map("body_type")
  drivetrain String
  engine String
  horsePower Int @map("horse_power")
  transmission String
  fuelType String @map("fuel_type")
  exteriorColor String @map("exterior_color")
  interiorColor String @map("interior_color")
  post Post @relation(fields: [postId], references: [id])
  postId String @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("cars")
}

model Price {
  id String @id @default(uuid())
  price String
  currency String
  fixed Boolean
  post Post @relation(fields: [postId], references: [id])
  postId String @unique @map("post_id") // relation scalar field (used in the `@relation` attribute above)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  @@map("prices")
}

model Media {
  id String @id @default(uuid())
  path String
  mediaInPost MediaInPost?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model MediaInPost {
  id String @id @default(uuid())
  post Post @relation(fields: [postId], references: [id])
  postId String @unique @map("post_id")
  media Media @relation(fields: [mediaId], references: [id])
  mediaId String @unique @map("media_id")
  priority String
  @@map("media_in_post")
}

model ForgotPassword {
  id String @id
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId Int @map("user_id")
  @@map("forgot_password")
}
